[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "insight-digger-mcp"
version = "1.0.0"
description = "Enterprise-grade MCP system for data analysis with Claude Desktop integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Sandsiv Switzerland AG", email = "info@sandsiv.com"}
]
keywords = ["mcp", "data-analysis", "claude", "sandsiv", "enterprise"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.8"
dependencies = [
    "flask>=2.0.0",
    "redis>=4.0.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "mcp>=1.0.0",
    "fastmcp>=0.2.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "PyYAML>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "fakeredis>=2.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "fakeredis>=2.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
insight-digger-flask-api = "src.python.insight_digger_mcp.scripts.start_flask_api:main"
insight-digger-mcp-server = "src.python.insight_digger_mcp.scripts.start_mcp_server:main"

[project.urls]
Homepage = "https://github.com/sandsiv/insight-digger-mcp"
Documentation = "https://docs.sandsiv.com/insight-digger-mcp"
Repository = "https://github.com/sandsiv/insight-digger-mcp.git"
Issues = "https://github.com/sandsiv/insight-digger-mcp/issues"

[tool.setuptools.packages.find]
where = ["src/python"]
include = ["insight_digger_mcp*"]

[tool.setuptools.package-data]
"insight_digger_mcp" = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto" 